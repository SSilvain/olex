@use "sass:math";

@import "base/mixins";

//&display=swap

@import url(https://fonts.googleapis.com/css?family=Oxygen:300,regular,700&display=swap);
@import url(https://fonts.googleapis.com/css?family=Inter:100,200,300,regular,500,600,700,800,900&display=swap);
// @import "fonts/fonts";

//@import "fonts/icons";

:root {
	--color-main: #0287E7;
	--text-color-main: #121212;
	--text-color-slave: #666666;
	--text-color-light: #fff;
	--font-main: Oxygen;
	--font-slave: Inter;
  }

$fontSize: rem(17);

// $mainColor: var(--main-color);

// $mainColor: var(--main-color);
$minWidth: 320;

$maxWidth: 1440;

$maxWidthContainer: 1200;

$containerPadding: 30;

$containerWidth: $maxWidthContainer + $containerPadding;

$pc: em($containerWidth);
$tablet: em(991.98);
$mobile: em(767.98);
$mobileSmall: em(479.98);

$responsiveType: 1;

@import "base/null";


body {
	background: url("@img/hero-bg.png") no-repeat center;

	.lock & {
		overflow: hidden;
		touch-action: none;
		overscroll-behavior: none;
	}

	// .loaded & {
	// }
}

.wrapper {
	min-height: 100%;
	display: flex;
	flex-direction: column;
	overflow: hidden;

	> main {
		flex: 1 1 auto;
	}

	> * {
		min-width: 0;
	}
}



@if ($responsiveType==1) {

	[class*="__container"] {
		@if ($maxWidthContainer>0) {
			max-width: rem($maxWidthContainer);
			box-sizing: content-box;
			margin: 0 auto;
		}
		@if ($containerPadding>0) {
			@if ($maxWidthContainer>0) {
				padding: 0 rem(math.div($containerPadding, 2));
			} @else {
				@include adaptiveValue("padding-left", math.div($containerPadding, 2), 15);
				@include adaptiveValue("padding-right", math.div($containerPadding, 2), 15);
			}
		}
	}
} @else {

	[class*="__container"] {
		margin: 0 auto;
		@if ($maxWidthContainer>0) {
			max-width: rem($maxWidthContainer);
			box-sizing: content-box;
		} @else {
			@if ($containerPadding>0) {
				padding: 0 rem(math.div($containerPadding, 2));
			}
		}
		@media (max-width: $pc) {
			max-width: rem(970);
		}
		@media (max-width: $tablet) {
			max-width: rem(750);
		}
		@media (max-width: $mobile) {
			max-width: none;
			@if ($containerPadding>0 and $maxWidthContainer>0) {
				padding: 0 rem(math.div($containerPadding, 2));
			}
		}
	}
}

@import "base";

@import "common";

@import "pages/header";
@import "pages/footer";

@import "pages/index/01_hero";
@import "pages/index/02_next";